AWSTemplateFormatVersion: 2010-09-09
Resources:
  DefineSafeApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: DefineSafeApi
      Description: An API for the define safe application
      FailOnWarnings: true
      EndpointConfiguration:
        Types: ["REGIONAL"]
  DefineSafeApiStage:
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      DeploymentId:
        Ref: ApiDeployment
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: '*'
          ResourcePath: /*
      RestApiId:
        Ref: DefineSafeApi
      StageName: v1
  ApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - GetPlanMethod
      - UpdatePlanMethod
      - CreatePlanMethod
      - AddMedicationMethod
      - GetAllPlansMethod
    Properties:
      RestApiId:
        Ref: DefineSafeApi
# Authentication
  LambdaPermissionForAuth:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:CustomAuthorizer'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: DefineSafeApi
            - /*
# Custom Authorizer used by the entire API
  Authorizer:
    Type : 'AWS::ApiGateway::Authorizer'
    Properties:
      AuthorizerCredentials: 'arn:aws:iam::042537148068:role/AWSLambdaBasicExecutionRole-CustomAuthorizer'
      AuthorizerUri:
          'Fn::Join':
          - ''
          - - 'arn:aws:apigateway:'
            - Ref: 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - 'arn:aws:lambda:us-east-1:042537148068:function:CustomAuthorizer'
            - /invocations
      Type: TOKEN
      IdentitySource: method.request.header.Authorization
      Name: jwt-rsa-custom-authorizer
      RestApiId: 
        Ref: DefineSafeApi
# Api Resources section
  PlanResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: DefineSafeApi
      ParentId:
        'Fn::GetAtt':
          - DefineSafeApi
          - RootResourceId
      PathPart: plan
  PlansResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: DefineSafeApi
      ParentId:
        'Fn::GetAtt':
          - DefineSafeApi
          - RootResourceId
      PathPart: plans
  MedicationResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: DefineSafeApi
      ParentId:
        'Fn::GetAtt':
          - DefineSafeApi
          - RootResourceId
      PathPart: medication
# Resource Options for CORS
  PlanOptions:
    DependsOn:
      - PlanResource
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId:
        Ref: DefineSafeApi
      ResourceId:
        Ref: PlanResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
            method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,OPTIONS'" #This list must include all calls being made to this resource
            method.response.header.Access-Control-Allow-Origin: "'*'"
          ResponseTemplates:
            application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
      - StatusCode: 200
        ResponseModels:
          application/json: 'Empty'
        ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
  PlansOptions:
    DependsOn:
      - PlansResource
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId:
        Ref: DefineSafeApi
      ResourceId:
        Ref: PlansResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
            method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'" #This list must include all calls being made to this resource
            method.response.header.Access-Control-Allow-Origin: "'*'"
          ResponseTemplates:
            application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
      - StatusCode: 200
        ResponseModels:
          application/json: 'Empty'
        ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
  MedicationOptions:
    DependsOn:
      - MedicationResource
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId:
        Ref: DefineSafeApi
      ResourceId:
        Ref: MedicationResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
            method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,OPTIONS'" #This list must include all calls being made to this resource
            method.response.header.Access-Control-Allow-Origin: "'*'"
          ResponseTemplates:
            application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
      - StatusCode: 200
        ResponseModels:
          application/json: 'Empty'
        ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
# Models
  PlanModel:
    Type: 'AWS::ApiGateway::Model'
    Properties:
      RestApiId: !Ref DefineSafeApi
      ContentType: application/json
      Description: Plan request model
      Name: PlanModel
      Schema:
        $schema: 'http://json-schema.org/draft-04/schema#'
        title: PlanModel
        type: object
        properties:
          plan_id:
            type: string
          user_id:
            type: string
          triggers:
            type: string
          coping_skills:
            type: string
  CreatePlanRequestModel:
    Type: 'AWS::ApiGateway::Model'
    Properties:
      RestApiId: !Ref DefineSafeApi
      ContentType: application/json
      Description: Create Plan request model
      Name: CreatePlanRequestModel
      Schema:
        $schema: 'http://json-schema.org/draft-04/schema#'
        title: CreatePlanRequestModel
        type: object
        properties:
          triggers:
            type: string
          coping_skills:
            type: string
  UpdatePlanRequestModel:
    Type: 'AWS::ApiGateway::Model'
    Properties:
      RestApiId: !Ref DefineSafeApi
      ContentType: application/json
      Description: Update Plan request model
      Name: UpdatePlanRequestModel
      Schema:
        $schema: 'http://json-schema.org/draft-04/schema#'
        title: UpdatePlanRequestModel
        type: object
        properties:
          triggers:
            type: string
          coping_skills:
            type: string
  GetPlansResponseModel:
    Type: 'AWS::ApiGateway::Model'
    Properties:
      RestApiId: !Ref DefineSafeApi
      ContentType: application/json
      Description: Model returned when calling to get all plans
      Name: GetPlansResponseModel
      Schema:
        $schema: 'http://json-schema.org/draft-04/schema#'
        title: GetPlansResponseModel
        type: object
        properties:
          plans:
            type: array
            items:
              type: object
              properties:
                plan_id:
                  type: string
                user_id:
                  type: string
                triggers:
                  type: string
                coping_skills:
                  type: string
  AddMedicationRequestModel:
    Type: 'AWS::ApiGateway::Model'
    Properties:
      RestApiId: !Ref DefineSafeApi
      ContentType: application/json
      Description: Add Medication request model
      Name: AddMedicationRequestModel
      Schema:
        $schema: 'http://json-schema.org/draft-04/schema#'
        title: AddMedicationRequestModel
        type: object
        properties:
          medication_name:
            type: string
          dosage_quantity:
            type: [integer, 'null']
          dosage_unit:
            type: [string, 'null']
          times_per:
            type: [integer, 'null']
          times_per_unit:
            type: [string, 'null']
          time_taken:
            type: [string, 'null']
          date_started:
            type: [string, 'null']
          intended_use:
            type: [string, 'null']
          date_stopped:
            type: [string, 'null']
          reason_for_stop:
            type: [string, 'null']
  MedicationModel:
    Type: 'AWS::ApiGateway::Model'
    Properties:
      RestApiId: !Ref DefineSafeApi
      ContentType: application/json
      Description: Medication model
      Name: MedicationModel
      Schema:
        $schema: 'http://json-schema.org/draft-04/schema#'
        title: MedicationModel
        type: object
        properties:
          medication_id:
            type: string
          user_id:
            type: string
          medication_name:
            type: string
          dosage_quantity:
            type: [integer, 'null']
          dosage_unit:
            type: [string, 'null']
          times_per:
            type: [integer, 'null']
          times_per_unit:
            type: [string, 'null']
          time_taken:
            type: [string, 'null']
          date_started:
            type: [string, 'null']
          intended_use:
            type: [string, 'null']
          date_stopped:
            type: [string, 'null']
          reason_for_stop:
            type: [string, 'null']
# Methods below here include a lambda permission and a method definition
# GetPlanByUserId
  GetPlanPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:GetPlanByUserId'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: DefineSafeApi
            - /*
  GetPlanMethod:
    DependsOn: 
      - GetPlanPermissions
      - PlanResource
      - PlanModel
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:GetPlanByUserId'
              - /invocations
      ResourceId:
        Ref: PlanResource
      RestApiId:
        Ref: DefineSafeApi
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: PlanModel
# UpdatePlanById
  UpdatePlanPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:UpdatePlanById'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: DefineSafeApi
            - /*
  UpdatePlanMethod:
    DependsOn: 
      - UpdatePlanPermissions
      - PlanResource
      - UpdatePlanRequestModel
      - PlanModel
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref Authorizer
      HttpMethod: PUT
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:UpdatePlanById'
              - /invocations
        IntegrationResponses:
          - StatusCode: 200
      ResourceId:
        Ref: PlanResource
      RestApiId:
        Ref: DefineSafeApi      
      RequestModels:
        application/json: UpdatePlanRequestModel
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: PlanModel
# CreatePlan
  CreatePlanPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:CreatePlan'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: DefineSafeApi
            - /*
  CreatePlanMethod:
    DependsOn: 
      - CreatePlanPermissions
      - PlanResource
      - CreatePlanRequestModel
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref Authorizer
      HttpMethod: POST
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:CreatePlan'
              - /invocations
        IntegrationResponses:
          - StatusCode: 200
      ResourceId:
        Ref: PlanResource
      RestApiId:
        Ref: DefineSafeApi
      RequestModels:
        application/json: CreatePlanRequestModel
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: PlanModel
# AddMedication
  AddMedicationPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:AddMedication'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: DefineSafeApi
            - /*
  AddMedicationMethod:
    DependsOn: 
      - AddMedicationPermissions
      - MedicationResource
      - AddMedicationRequestModel
      - MedicationModel
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref Authorizer
      HttpMethod: POST
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:AddMedication'
              - /invocations
        IntegrationResponses:
          - StatusCode: 200
      ResourceId:
        Ref: MedicationResource
      RestApiId:
        Ref: DefineSafeApi
      RequestModels:
        application/json: AddMedicationRequestModel
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: MedicationModel
# GetAllPlans
  GetAllPlansPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:GetAllPlans'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: DefineSafeApi
            - /*
  GetAllPlansMethod:
    DependsOn: 
      - GetAllPlansPermissions
      - PlansResource
      - GetPlansResponseModel
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:GetAllPlans'
              - /invocations
        IntegrationResponses:
          - StatusCode: 200
      ResourceId:
        Ref: PlansResource
      RestApiId:
        Ref: DefineSafeApi
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: GetPlansResponseModel

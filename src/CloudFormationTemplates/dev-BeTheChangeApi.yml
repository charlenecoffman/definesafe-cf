AWSTemplateFormatVersion: 2010-09-09
Resources:
  dev-BeTheChangeApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: dev-BeTheChangeApi
      Description: An API for the be the change website
      FailOnWarnings: true
      EndpointConfiguration:
        Types: ["REGIONAL"]
  dev-BeTheChangeApiStage:
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      DeploymentId:
        Ref: dev-BeTheChangeApi
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: '*'
          ResourcePath: /*
      RestApiId:
        Ref: dev-BeTheChangeApi
      StageName: v1
  dev-ApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - GetAlertsMethod
      - DeleteAlertsMethod
      - PutAlertsMethod
      - PutAssistanceRequestMethod
      - PostAssistanceRequestMethod
      - PatchAssistanceRequestMethod
      - GetAssistanceRequestsMethod
      - GetButterMethod
      - GetButterDonarMethod
      - GetDocumentMethod
      - PostDocumentMethod
      - DeleteDocumentMethod
      - GetStoriesMethod
      - GetUserProfileMethod
      - PostUserProfileMethod
      - PutUserProfileMethod
      - GetUserProfilesMethod
    Properties:
      RestApiId:
        Ref: dev-BeTheChangeApi
# Authentication
  dev-LambdaPermissionForAuth:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_CustomAuthorizer'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
# Custom Authorizer used by the entire API
  dev-btc_Authorizer:
    Type : 'AWS::ApiGateway::Authorizer'
    Properties:
      AuthorizerCredentials: 'arn:aws:iam::042537148068:role/LambdaRole-dev-btc_CustomAuthorizer'
      AuthorizerUri:
          'Fn::Join':
          - ''
          - - 'arn:aws:apigateway:'
            - Ref: 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_CustomAuthorizer'
            - /invocations
      Type: TOKEN
      IdentitySource: method.request.header.Authorization
      Name: dev-btc_Authorizer
      RestApiId: 
        Ref: dev-BeTheChangeApi
# Api Resources section
  AlertsResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: dev-BeTheChangeApi
      ParentId:
        'Fn::GetAtt':
          - dev-BeTheChangeApi
          - RootResourceId
      PathPart: alerts
  AssistanceRequestResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: dev-BeTheChangeApi
      ParentId:
        'Fn::GetAtt':
          - dev-BeTheChangeApi
          - RootResourceId
      PathPart: assistancerequest
  AssistanceRequestsResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: dev-BeTheChangeApi
      ParentId:
        'Fn::GetAtt':
          - dev-BeTheChangeApi
          - RootResourceId
      PathPart: assistancerequests
  ButterResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: dev-BeTheChangeApi
      ParentId:
        'Fn::GetAtt':
          - dev-BeTheChangeApi
          - RootResourceId
      PathPart: butter
  DonarResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: dev-BeTheChangeApi
      ParentId:
        'Fn::GetAtt':
          - dev-BeTheChangeApi
          - ButterResource
      PathPart: butter
  DocumentResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: dev-BeTheChangeApi
      ParentId:
        'Fn::GetAtt':
          - dev-BeTheChangeApi
          - RootResourceId
      PathPart: document
  StoriesResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: dev-BeTheChangeApi
      ParentId:
        'Fn::GetAtt':
          - dev-BeTheChangeApi
          - RootResourceId
      PathPart: stories
  UserProfileResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: dev-BeTheChangeApi
      ParentId:
        'Fn::GetAtt':
          - dev-BeTheChangeApi
          - RootResourceId
      PathPart: userprofile
  UserProfilesResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: dev-BeTheChangeApi
      ParentId:
        'Fn::GetAtt':
          - dev-BeTheChangeApi
          - RootResourceId
      PathPart: userprofiles
# Resource Options for CORS
  AlertsResourceOptions:
    DependsOn:
      - AlertsResource
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId:
        Ref: dev-BeTheChangeApi
      ResourceId:
        Ref: AlertsResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
            method.response.header.Access-Control-Allow-Methods: "'GET,DELETE,PUT,OPTIONS'" #This list must include all calls being made to this resource
            method.response.header.Access-Control-Allow-Origin: "'*'"
          ResponseTemplates:
            application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
      - StatusCode: 200
        ResponseModels:
          application/json: 'Empty'
        ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
  AssistanceRequestResourceOptions:
    DependsOn:
      - AssistanceRequestResource
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId:
        Ref: dev-BeTheChangeApi
      ResourceId:
        Ref: AssistanceRequestResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
            method.response.header.Access-Control-Allow-Methods: "'PATCH,POST,PUT,OPTIONS'" #This list must include all calls being made to this resource
            method.response.header.Access-Control-Allow-Origin: "'*'"
          ResponseTemplates:
            application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
      - StatusCode: 200
        ResponseModels:
          application/json: 'Empty'
        ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
  AssistanceRequestsResourceOptions:
    DependsOn:
      - AssistanceRequestsResource
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId:
        Ref: dev-BeTheChangeApi
      ResourceId:
        Ref: AssistanceRequestsResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
            method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'" #This list must include all calls being made to this resource
            method.response.header.Access-Control-Allow-Origin: "'*'"
          ResponseTemplates:
            application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
      - StatusCode: 200
        ResponseModels:
          application/json: 'Empty'
        ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
  ButterResourceOptions:
    DependsOn:
      - ButterResource
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId:
        Ref: dev-BeTheChangeApi
      ResourceId:
        Ref: ButterResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
            method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'" #This list must include all calls being made to this resource
            method.response.header.Access-Control-Allow-Origin: "'*'"
          ResponseTemplates:
            application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
      - StatusCode: 200
        ResponseModels:
          application/json: 'Empty'
        ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
  DonarResourceOptions:
    DependsOn:
      - DonarResource
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId:
        Ref: dev-BeTheChangeApi
      ResourceId:
        Ref: DonarResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
            method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'" #This list must include all calls being made to this resource
            method.response.header.Access-Control-Allow-Origin: "'*'"
          ResponseTemplates:
            application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
      - StatusCode: 200
        ResponseModels:
          application/json: 'Empty'
        ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
  DocumentResourceOptions:
    DependsOn:
      - DocumentResource
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId:
        Ref: dev-BeTheChangeApi
      ResourceId:
        Ref: DocumentResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
            method.response.header.Access-Control-Allow-Methods: "'GET,DELETE,POST,OPTIONS'" #This list must include all calls being made to this resource
            method.response.header.Access-Control-Allow-Origin: "'*'"
          ResponseTemplates:
            application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
      - StatusCode: 200
        ResponseModels:
          application/json: 'Empty'
        ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
  StoriesResourceOptions:
    DependsOn:
      - StoriesResource
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId:
        Ref: dev-BeTheChangeApi
      ResourceId:
        Ref: StoriesResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
            method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'" #This list must include all calls being made to this resource
            method.response.header.Access-Control-Allow-Origin: "'*'"
          ResponseTemplates:
            application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
      - StatusCode: 200
        ResponseModels:
          application/json: 'Empty'
        ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
  UserProfileResourceOptions:
    DependsOn:
      - UserProfileResource
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId:
        Ref: dev-BeTheChangeApi
      ResourceId:
        Ref: UserProfileResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
            method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,OPTIONS'" #This list must include all calls being made to this resource
            method.response.header.Access-Control-Allow-Origin: "'*'"
          ResponseTemplates:
            application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
      - StatusCode: 200
        ResponseModels:
          application/json: 'Empty'
        ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
  UserProfilesResourceOptions:
    DependsOn:
      - UserProfilesResource
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId:
        Ref: dev-BeTheChangeApi
      ResourceId:
        Ref: UserProfilesResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
            method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'" #This list must include all calls being made to this resource
            method.response.header.Access-Control-Allow-Origin: "'*'"
          ResponseTemplates:
            application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
      - StatusCode: 200
        ResponseModels:
          application/json: 'Empty'
        ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
# Methods below here include a lambda permission and a method definition
# GetAlertsMethod
  GetAlertsPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getAlerts'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  GetAlertsMethod:
    DependsOn: 
      - GetAlertsPermissions
      - AlertsResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getAlerts'
              - /invocations
      ResourceId:
        Ref: AlertsResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
# DeleteAlertsMethod
  DeleteAlertsPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_deleteAlert'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  DeleteAlertsMethod:
    DependsOn: 
      - DeleteAlertsPermissions
      - AlertsResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_deleteAlerts'
              - /invocations
      ResourceId:
        Ref: AlertsResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
# PutAlertsMethod
  PutAlertsPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_createAlertForAdminsAlert'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  PutAlertsMethod:
    DependsOn: 
      - PutAlertsPermissions
      - AlertsResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_createAlertForAdminsAlert'
              - /invocations
      ResourceId:
        Ref: AlertsResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
# PutAssistanceRequestMethod
  PutAssistanceRequestPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_updateAssistanceRequestStatus'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  PutAssistanceRequestMethod:
    DependsOn: 
      - PutAssistanceRequestPermissions
      - AssistanceRequestResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_updateAssistanceRequestStatus'
              - /invocations
      ResourceId:
        Ref: AssistanceRequestResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
# PostAssistanceRequestMethod
  PostAssistanceRequestPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_putAssistanceRequest'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  PostAssistanceRequestMethod:
    DependsOn: 
      - PostAssistanceRequestPermissions
      - AssistanceRequestResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_putAssistanceRequest'
              - /invocations
      ResourceId:
        Ref: AssistanceRequestResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
# PatchAssistanceRequestMethod
  PatchAssistanceRequestPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_updateAssistanceRequestFileName'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  PatchAssistanceRequestMethod:
    DependsOn: 
      - PatchAssistanceRequestPermissions
      - AssistanceRequestResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_updateAssistanceRequestFileName'
              - /invocations
      ResourceId:
        Ref: AssistanceRequestResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
# GetAssistanceRequestsMethod
  GetAssistanceRequestsPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getAssistanceRequests'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  GetAssistanceRequestsMethod:
    DependsOn: 
      - GetAssistanceRequestsPermissions
      - AssistanceRequestsResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getAssistanceRequests'
              - /invocations
      ResourceId:
        Ref: AssistanceRequestsResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
# GetButterMethod
  GetButterPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getButterStuff'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  GetButterMethod:
    DependsOn: 
      - GetButterPermissions
      - ButterResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getButterStuff'
              - /invocations
      ResourceId:
        Ref: ButterResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
# GetButterDonarMethod
  GetButterDonarPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getNumberOfDonars'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  GetButterMethod:
    DependsOn: 
      - GetButterDonarPermissions
      - DonarResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getNumberOfDonars'
              - /invocations
      ResourceId:
        Ref: DonarResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
# GetDocumentMethod
  GetDocumentPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getSignedUrlForGetObject'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  GetDocumentMethod:
    DependsOn: 
      - GetDocumentPermissions
      - DocumentResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getSignedUrlForGetObject'
              - /invocations
      ResourceId:
        Ref: DocumentResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
# PostDocumentMethod
  PostDocumentPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getSignedUrlForPutObject'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  PostDocumentMethod:
    DependsOn: 
      - PostDocumentPermissions
      - DocumentResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getSignedUrlForPutObject'
              - /invocations
      ResourceId:
        Ref: DocumentResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
# DeleteDocumentMethod
  DeleteDocumentPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_deleteFileFromS3'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  DeleteDocumentMethod:
    DependsOn: 
      - DeleteDocumentPermissions
      - DocumentResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_deleteFileFromS3'
              - /invocations
      ResourceId:
        Ref: DocumentResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
# GetStoriesMethod
  GetStoriesPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getStories'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  GetStoriesMethod:
    DependsOn: 
      - GetStoriesPermissions
      - StoriesResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getStories'
              - /invocations
      ResourceId:
        Ref: StoriesResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
# GetUserProfileMethod
  GetUserProfilePermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getUserProfile'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  GetUserProfileMethod:
    DependsOn: 
      - GetUserProfilePermissions
      - UserProfileResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getUserProfile'
              - /invocations
      ResourceId:
        Ref: UserProfileResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
# PostUserProfileMethod
  PostUserProfilePermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_createUserProfile'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  PostUserProfileMethod:
    DependsOn: 
      - PostUserProfilePermissions
      - UserProfileResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_createUserProfile'
              - /invocations
      ResourceId:
        Ref: UserProfileResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
# PutUserProfileMethod
  PutUserProfilePermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_updateUserProfile'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  PutUserProfileMethod:
    DependsOn: 
      - PutUserProfilePermissions
      - UserProfileResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_updateUserProfile'
              - /invocations
      ResourceId:
        Ref: UserProfileResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
# GetUserProfilesMethod
  GetUserProfilesPermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getUserProfiles'
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: dev-BeTheChangeApi
            - /*
  GetUserProfilesMethod:
    DependsOn: 
      - GetUserProfilesPermissions
      - UserProfilesResource
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref dev-btc_Authorizer
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'arn:aws:lambda:us-east-1:042537148068:function:dev-btc_getUserProfiles'
              - /invocations
      ResourceId:
        Ref: UserProfilesResource
      RestApiId:
        Ref: dev-BeTheChangeApi
      MethodResponses:
        - StatusCode: 200
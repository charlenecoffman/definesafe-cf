name: PermissionsDeployment
on:
  workflow_run:
    workflows: ["CFDeployments"]
    branches: [main]
    types: 
      - completed

jobs:
  addPermissionsToCreatePlan:
    runs-on: ubuntu-18.04
    steps:
      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          AWS-ACCESS-KEY-ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS-SECRET-ACCESS-KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS-REGION: us-east-1
      - name: Check Policy Existance
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          policy=$(aws iam list-policies --query 'Policies[?PolicyName == "CreatePlanPermissions"].Arn' --output text --region "us-east-1")
          echo "::set-env name=POLICY::$policy"
      - name: Create Plan Permissions If Does Not Exist
        if: env.POLICY == ''
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo src/Permissions/CreatePlanPermissions.json > policyJson.json
          echo file://policyJson.json
          policy=$(aws iam create-policy --policy-name "CreatePlanPermissions" --policy-document file://policyJson.json --tags Key=Solution,Value=DefineSafe)
          echo $policy > returnObject.json
          sleep 10s
          aws iam attach-role-policy --role-name "AWSLambdaBasicExecutionRole-CreatePlan" --policy-arn "$(jq -r '.Policy.Arn' returnObject.json)"
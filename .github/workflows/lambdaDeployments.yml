name: CI
on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Zip up each function
        id: zipfunctions
        run: cd src/Lambdas && for i in */; do (cd "$i"; zip -r "../${i%/}.zip" .); done
      - name: Upload Zips to artifact container
        uses: actions/upload-artifact@master
        with:
          name: zips
          path: src/Lambdas/*.zip
  createMatrix:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      matrix: ${{steps.jsonMatrixOutput.outputs.matrix}}
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Json Matrix Output
        id: jsonMatrixOutput
        run: |
          matrixOutput="{\"include\":["
          cd artifacts/zips && for i in ./*; do 
            f=$(echo "${i##*/}");
            filename=$(echo $f| cut  -d'.' -f 1);
            matrixOutput+="{\"file\":\"${filename}\"},"; 
          done
          matrixOutput+="]}"
          echo "::set-output name=matrix::${matrixOutput}"
  deploy:
    runs-on: ubuntu-latest
    needs: createMatrix
    strategy:
      matrix: ${{fromJson(needs.createMatrix.outputs.matrix)}}
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./
      - uses: chrislennon/action-aws-cli@v1.1
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
      - name: Check Function Existance
        run: |
          role=$(aws lambda list-functions --query 'Functions[?FunctionName == `${{matrix.file}}`].Role' --output text --region "us-east-1")
          echo "::set-env name=ROLE::$role"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
      - name: Create Role and Function
        if: env.ROLE == ''
        run: |          
          aws lambda create-function --function-name ${{matrix.file}} --runtime "nodejs12.x" --role "arn:aws:iam::042537148068:role/AWSLambdaBasicExecutionRole-defineSafe" --handler "index.handler" --zip-file fileb://zips/${{matrix.file}}.zip --region "us-east-1"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Deploy To AWS
        if: env.ROLE != ''
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-east-1
          function_name: ${{ matrix.file }}
          zip_file: zips/${{matrix.file}}.zip